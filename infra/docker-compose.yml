version: '3.8'
services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - ./.env
    container_name: db
  backend:
#    build:
#      context: ../backend
#      dockerfile: Dockerfile
    image: p1rt/foodgram_backend:latest
    restart: always
#    ports:
#      - "8000:8000"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
       - db
    env_file:
      - ./.env
    container_name: backend
  frontend:
#    build:
#      context: ../frontend
#      dockerfile: Dockerfile
    image: p1rt/foodgram_frontend:latest
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend
    container_name: fronted
  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
    container_name: nginx

volumes:
  postgres_data:
  static_value:
  media_value:
